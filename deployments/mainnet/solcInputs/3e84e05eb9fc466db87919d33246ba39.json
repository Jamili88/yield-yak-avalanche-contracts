{
  "language": "Solidity",
  "sources": {
    "contracts/helpers/StrategyHelper.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\ninterface IStrategy {\n  function checkReward() external view returns (uint256);\n  function totalDeposits() external view returns (uint256);\n  function totalSupply() external view returns (uint256);\n  function REINVEST_REWARD_BIPS() external view returns (uint256);\n}\n\ncontract StrategyHelper {\n\n  struct StrategyInfo {\n    uint totalSupply;\n    uint totalDeposits;\n    uint reward;\n    uint reinvestRewardBips;\n  }\n\n  constructor() {}\n\n  function strategyInfo(address strategyAddress) public view returns (StrategyInfo memory) {\n    IStrategy strategy = IStrategy(strategyAddress);\n    StrategyInfo memory info;\n    info.totalSupply = strategy.totalSupply();\n    info.totalDeposits = strategy.totalDeposits();\n    info.reward = strategy.checkReward();\n    info.reinvestRewardBips = strategy.REINVEST_REWARD_BIPS();\n    return info;\n  }\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}